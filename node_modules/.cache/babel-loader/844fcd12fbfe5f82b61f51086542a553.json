{"ast":null,"code":"var ClusterIcon = /*#__PURE__*/\nfunction () {\n  function ClusterIcon(cluster, styles) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView);\n    this.cluster = cluster;\n    this.className = this.cluster.getClusterer().getClusterClass();\n    this.styles = styles;\n    this.center = undefined;\n    this.div = null;\n    this.sums = null;\n    this.visible = false;\n    this.boundsChangedListener = null;\n    this.url = '';\n    this.height = 0;\n    this.width = 0;\n    this.anchorText = [0, 0];\n    this.anchorIcon = [0, 0];\n    this.textColor = 'black';\n    this.textSize = 11;\n    this.textDecoration = 'none';\n    this.fontWeight = 'bold';\n    this.fontStyle = 'normal';\n    this.fontFamily = 'Arial,sans-serif';\n    this.backgroundPosition = '0 0'; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.setMap(cluster.getMap()); // Note: this causes onAdd to be called\n  }\n\n  var _proto = ClusterIcon.prototype;\n  _proto.onAdd = function onAdd() {\n    var _this = this;\n    var cMouseDownInCluster;\n    var cDraggingMapByCluster;\n    this.div = document.createElement('div');\n    this.div.className = this.className;\n    if (this.visible) {\n      this.show();\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.getPanes().overlayMouseTarget.appendChild(this.div); // Fix for Issue 157\n\n    this.boundsChangedListener = google.maps.event.addListener(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap(), 'boundschanged', function boundsChanged() {\n      cDraggingMapByCluster = cMouseDownInCluster;\n    });\n    google.maps.event.addDomListener(this.div, 'mousedown', function onMouseDown() {\n      cMouseDownInCluster = true;\n      cDraggingMapByCluster = false;\n    }); // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n\n    google.maps.event.addDomListener(this.div, 'click',\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function (event) {\n      cMouseDownInCluster = false;\n      if (!cDraggingMapByCluster) {\n        var markerClusterer = _this.cluster.getClusterer();\n        /**\r\n         * This event is fired when a cluster marker is clicked.\r\n         * @name MarkerClusterer#click\r\n         * @param {Cluster} c The cluster that was clicked.\r\n         * @event\r\n         */\n\n        google.maps.event.trigger(markerClusterer, 'click', _this.cluster);\n        google.maps.event.trigger(markerClusterer, 'clusterclick', _this.cluster); // deprecated name\n        // The default click handler follows. Disable it by setting\n        // the zoomOnClick property to false.\n\n        if (markerClusterer.getZoomOnClick()) {\n          // Zoom into the cluster.\n          var maxZoom = markerClusterer.getMaxZoom();\n          var bounds = _this.cluster.getBounds(); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n\n          markerClusterer.getMap().fitBounds(bounds); // There is a fix for Issue 170 here:\n\n          setTimeout(function timeout() {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            markerClusterer.getMap().fitBounds(bounds); // Don't zoom beyond the max zoom level\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n\n            if (maxZoom !== null && markerClusterer.getMap().getZoom() > maxZoom) {\n              // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              markerClusterer.getMap().setZoom(maxZoom + 1);\n            }\n          }, 100);\n        } // Prevent event propagation to the map:\n\n        event.cancelBubble = true;\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        }\n      }\n    });\n    google.maps.event.addDomListener(this.div, 'mouseover',\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      /**\r\n       * This event is fired when the mouse moves over a cluster marker.\r\n       * @name MarkerClusterer#mouseover\r\n       * @param {Cluster} c The cluster that the mouse moved over.\r\n       * @event\r\n       */\n      google.maps.event.trigger(_this.cluster.getClusterer(), 'mouseover', _this.cluster);\n    }); // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n\n    google.maps.event.addDomListener(this.div, 'mouseout',\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      /**\r\n       * This event is fired when the mouse moves out of a cluster marker.\r\n       * @name MarkerClusterer#mouseout\r\n       * @param {Cluster} c The cluster that the mouse moved out of.\r\n       * @event\r\n       */\n      google.maps.event.trigger(_this.cluster.getClusterer(), 'mouseout', _this.cluster);\n    });\n  };\n  _proto.onRemove = function onRemove() {\n    if (this.div && this.div.parentNode) {\n      this.hide();\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener);\n      }\n      google.maps.event.clearInstanceListeners(this.div);\n      this.div.parentNode.removeChild(this.div);\n      this.div = null;\n    }\n  };\n  _proto.draw = function draw() {\n    if (this.visible && this.div !== null && this.center) {\n      var _this$getPosFromLatLn = this.getPosFromLatLng(this.center),\n        x = _this$getPosFromLatLn.x,\n        y = _this$getPosFromLatLn.y;\n      this.div.style.top = y + 'px';\n      this.div.style.left = x + 'px';\n    }\n  };\n  _proto.hide = function hide() {\n    if (this.div) {\n      this.div.style.display = 'none';\n    }\n    this.visible = false;\n  };\n  _proto.show = function show() {\n    if (this.div && this.center) {\n      var img = '',\n        divTitle = ''; // NOTE: values must be specified in px units\n\n      var bp = this.backgroundPosition.split(' ');\n      var spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10);\n      var spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10);\n      var pos = this.getPosFromLatLng(this.center);\n      if (this.sums === null || typeof this.sums.title === 'undefined' || this.sums.title === '') {\n        divTitle = this.cluster.getClusterer().getTitle();\n      } else {\n        divTitle = this.sums.title;\n      }\n      this.div.style.cssText = this.createCss(pos);\n      img = \"<img alt='\" + divTitle + \"' src='\" + this.url + \"' style='position: absolute; top: \" + spriteV + 'px; left: ' + spriteH + 'px; '; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      //@ts-ignore\n\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img += 'clip: rect(' + -1 * spriteV + 'px, ' + (-1 * spriteH + this.width) + 'px, ' + (-1 * spriteV + this.height) + 'px, ' + -1 * spriteH + 'px);';\n      }\n      img += \"'>\";\n      this.div.innerHTML = img + \"<div style='\" + 'position: absolute;' + 'top: ' + this.anchorText[0] + 'px;' + 'left: ' + this.anchorText[1] + 'px;' + 'color: ' + this.textColor + ';' + 'font-size: ' + this.textSize + 'px;' + 'font-family: ' + this.fontFamily + ';' + 'font-weight: ' + this.fontWeight + ';' + 'font-style: ' + this.fontStyle + ';' + 'text-decoration: ' + this.textDecoration + ';' + 'text-align: center;' + 'width: ' + this.width + 'px;' + 'line-height:' + this.height + 'px;' + \"'>\" +\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.sums.text + '</div>';\n      this.div.title = divTitle;\n      this.div.style.display = '';\n    }\n    this.visible = true;\n  };\n  _proto.useStyle = function useStyle(sums) {\n    this.sums = sums;\n    var style = this.styles[Math.min(this.styles.length - 1, Math.max(0, sums.index - 1))];\n    this.url = style.url;\n    this.height = style.height;\n    this.width = style.width;\n    this.anchorText = style.anchorText || [0, 0];\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2];\n    this.textColor = style.textColor || 'black';\n    this.textSize = style.textSize || 11;\n    this.textDecoration = style.textDecoration || 'none';\n    this.fontWeight = style.fontWeight || 'bold';\n    this.fontStyle = style.fontStyle || 'normal';\n    this.fontFamily = style.fontFamily || 'Arial,sans-serif';\n    this.backgroundPosition = style.backgroundPosition || '0 0';\n  };\n  _proto.setCenter = function setCenter(center) {\n    this.center = center;\n  };\n  _proto.createCss = function createCss(pos) {\n    var style = [];\n    style.push('cursor: pointer;');\n    style.push('position: absolute; top: ' + pos.y + 'px; left: ' + pos.x + 'px;');\n    style.push('width: ' + this.width + 'px; height: ' + this.height + 'px;');\n    return style.join('');\n  };\n  _proto.getPosFromLatLng = function getPosFromLatLng(latlng) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n    pos.x -= this.anchorIcon[1];\n    pos.y -= this.anchorIcon[0]; // pos.x = pos.x\n    // pos.y = pos.y\n\n    return pos;\n  };\n  return ClusterIcon;\n}();\nvar Cluster = /*#__PURE__*/\nfunction () {\n  function Cluster(markerClusterer) {\n    this.markerClusterer = markerClusterer; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.map = this.markerClusterer.getMap();\n    this.gridSize = this.markerClusterer.getGridSize();\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize();\n    this.averageCenter = this.markerClusterer.getAverageCenter();\n    this.markers = [];\n    this.center = undefined;\n    this.bounds = null;\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles());\n  }\n  var _proto = Cluster.prototype;\n  _proto.getSize = function getSize() {\n    return this.markers.length;\n  };\n  _proto.getMarkers = function getMarkers() {\n    return this.markers;\n  };\n  _proto.getCenter = function getCenter() {\n    return this.center;\n  };\n  _proto.getMap = function getMap() {\n    return this.map;\n  };\n  _proto.getClusterer = function getClusterer() {\n    return this.markerClusterer;\n  };\n  _proto.getBounds = function getBounds() {\n    var bounds = new google.maps.LatLngBounds(this.center, this.center);\n    var markers = this.getMarkers();\n    for (var i = 0; i < markers.length; i++) {\n      var position = markers[i].getPosition();\n      if (position) {\n        bounds.extend(position);\n      }\n    }\n    return bounds;\n  };\n  _proto.remove = function remove() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.clusterIcon.setMap(null);\n    this.markers = [];\n    delete this.markers;\n  };\n  _proto.addMarker = function addMarker(marker) {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false;\n    }\n    if (!this.center) {\n      var position = marker.getPosition();\n      if (position) {\n        this.center = position;\n        this.calculateBounds();\n      }\n    } else {\n      if (this.averageCenter) {\n        var _position = marker.getPosition();\n        if (_position) {\n          var length = this.markers.length + 1;\n          this.center = new google.maps.LatLng((this.center.lat() * (length - 1) + _position.lat()) / length, (this.center.lng() * (length - 1) + _position.lng()) / length);\n          this.calculateBounds();\n        }\n      }\n    }\n    marker.isAdded = true;\n    this.markers.push(marker);\n    var mCount = this.markers.length;\n    var maxZoom = this.markerClusterer.getMaxZoom();\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map);\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map);\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (var i = 0; i < mCount; i++) {\n        this.markers[i].setMap(null);\n      }\n    } else {\n      marker.setMap(null);\n    }\n    return true;\n  };\n  _proto.isMarkerInClusterBounds = function isMarkerInClusterBounds(marker) {\n    if (this.bounds !== null) {\n      var position = marker.getPosition();\n      if (position) {\n        return this.bounds.contains(position);\n      }\n    }\n    return false;\n  };\n  _proto.calculateBounds = function calculateBounds() {\n    this.bounds = this.markerClusterer.getExtendedBounds(new google.maps.LatLngBounds(this.center, this.center));\n  };\n  _proto.updateIcon = function updateIcon() {\n    var mCount = this.markers.length;\n    var maxZoom = this.markerClusterer.getMaxZoom();\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      this.clusterIcon.hide();\n      return;\n    }\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide();\n      return;\n    }\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center);\n    }\n    this.clusterIcon.useStyle(this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length));\n    this.clusterIcon.show();\n  };\n  _proto.isMarkerAlreadyAdded = function isMarkerAlreadyAdded(marker) {\n    if (this.markers.includes) {\n      return this.markers.includes(marker);\n    } else {\n      for (var i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  return Cluster;\n}();\n\n/* global google */\n\nvar CALCULATOR = function CALCULATOR(markers, numStyles) {\n  var index = 0;\n  var title = '';\n  var count = markers.length.toString();\n  var dv = count;\n  while (dv !== 0) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    dv = parseInt(dv, 10) / 10;\n    index++;\n  }\n  index = Math.min(index, numStyles);\n  return {\n    text: count,\n    index: index,\n    title: title\n  };\n};\nvar BATCH_SIZE = 2000;\nvar BATCH_SIZE_IE = 500;\nvar IMAGE_PATH = 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m';\nvar IMAGE_EXTENSION = 'png';\nvar IMAGE_SIZES = [53, 56, 66, 78, 90];\nvar CLUSTERER_CLASS = 'cluster';\nvar Clusterer = /*#__PURE__*/\nfunction () {\n  function Clusterer(map, optMarkers, optOptions) {\n    if (optMarkers === void 0) {\n      optMarkers = [];\n    }\n    if (optOptions === void 0) {\n      optOptions = {};\n    }\n    this.extend(Clusterer, google.maps.OverlayView);\n    this.markers = [];\n    this.clusters = [];\n    this.listeners = [];\n    this.activeMap = null;\n    this.ready = false;\n    this.gridSize = optOptions.gridSize || 60;\n    this.minClusterSize = optOptions.minimumClusterSize || 2;\n    this.maxZoom = optOptions.maxZoom || null;\n    this.styles = optOptions.styles || [];\n    this.title = optOptions.title || '';\n    this.zoomOnClick = true;\n    if (optOptions.zoomOnClick !== undefined) {\n      this.zoomOnClick = optOptions.zoomOnClick;\n    }\n    this.averageCenter = false;\n    if (optOptions.averageCenter !== undefined) {\n      this.averageCenter = optOptions.averageCenter;\n    }\n    this.ignoreHidden = false;\n    if (optOptions.ignoreHidden !== undefined) {\n      this.ignoreHidden = optOptions.ignoreHidden;\n    }\n    this.enableRetinaIcons = false;\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons;\n    }\n    this.imagePath = optOptions.imagePath || IMAGE_PATH;\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION;\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES;\n    this.calculator = optOptions.calculator || CALCULATOR;\n    this.batchSize = optOptions.batchSize || BATCH_SIZE;\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE;\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS;\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE;\n    }\n    this.timerRefStatic = null;\n    this.setupStyles();\n    this.addMarkers(optMarkers, true); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.setMap(map); // Note: this causes onAdd to be called\n  }\n\n  var _proto = Clusterer.prototype;\n  _proto.onAdd = function onAdd() {\n    var _this = this;\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.activeMap = this.getMap();\n    this.ready = true;\n    this.repaint(); // Add the map event listeners\n\n    this.listeners = [google.maps.event.addListener(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap(), 'zoom_changed',\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      _this.resetViewport(false); // Workaround for this Google bug: when map is at level 0 and \"-\" of\n      // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n      // the map doesn't zoom out any further. In this situation, no \"idle\"\n      // event is triggered so the cluster markers that have been removed\n      // do not get redrawn. Same goes for a zoom in at maxZoom.\n\n      if (\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      _this.getMap().getZoom() === (_this.get('minZoom') || 0) ||\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      _this.getMap().getZoom() === _this.get('maxZoom')) {\n        google.maps.event.trigger(_this, 'idle');\n      }\n    }), google.maps.event.addListener(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap(), 'idle',\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      _this.redraw();\n    })];\n  } // eslint-disable-next-line @getify/proper-arrows/this\n  ;\n\n  _proto.onRemove = function onRemove() {\n    // Put all the managed markers back on the map:\n    for (var i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].getMap() !== this.activeMap) {\n        this.markers[i].setMap(this.activeMap);\n      }\n    } // Remove all clusters:\n\n    for (var _i = 0; _i < this.clusters.length; _i++) {\n      this.clusters[_i].remove();\n    }\n    this.clusters = []; // Remove map event listeners:\n\n    for (var _i2 = 0; _i2 < this.listeners.length; _i2++) {\n      google.maps.event.removeListener(this.listeners[_i2]);\n    }\n    this.listeners = [];\n    this.activeMap = null;\n    this.ready = false;\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ;\n\n  _proto.draw = function draw() {};\n  _proto.setupStyles = function setupStyles() {\n    if (this.styles.length > 0) {\n      return;\n    }\n    for (var i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: this.imagePath + (i + 1) + '.' + this.imageExtension,\n        height: this.imageSizes[i],\n        width: this.imageSizes[i]\n      });\n    }\n  };\n  _proto.fitMapToMarkers = function fitMapToMarkers() {\n    var markers = this.getMarkers();\n    var bounds = new google.maps.LatLngBounds();\n    for (var i = 0; i < markers.length; i++) {\n      var position = markers[i].getPosition();\n      if (position) {\n        bounds.extend(position);\n      }\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.getMap().fitBounds(bounds);\n  };\n  _proto.getGridSize = function getGridSize() {\n    return this.gridSize;\n  };\n  _proto.setGridSize = function setGridSize(gridSize) {\n    this.gridSize = gridSize;\n  };\n  _proto.getMinimumClusterSize = function getMinimumClusterSize() {\n    return this.minClusterSize;\n  };\n  _proto.setMinimumClusterSize = function setMinimumClusterSize(minimumClusterSize) {\n    this.minClusterSize = minimumClusterSize;\n  };\n  _proto.getMaxZoom = function getMaxZoom() {\n    return this.maxZoom;\n  };\n  _proto.setMaxZoom = function setMaxZoom(maxZoom) {\n    this.maxZoom = maxZoom;\n  };\n  _proto.getStyles = function getStyles() {\n    return this.styles;\n  };\n  _proto.setStyles = function setStyles(styles) {\n    this.styles = styles;\n  };\n  _proto.getTitle = function getTitle() {\n    return this.title;\n  };\n  _proto.setTitle = function setTitle(title) {\n    this.title = title;\n  };\n  _proto.getZoomOnClick = function getZoomOnClick() {\n    return this.zoomOnClick;\n  };\n  _proto.setZoomOnClick = function setZoomOnClick(zoomOnClick) {\n    this.zoomOnClick = zoomOnClick;\n  };\n  _proto.getAverageCenter = function getAverageCenter() {\n    return this.averageCenter;\n  };\n  _proto.setAverageCenter = function setAverageCenter(averageCenter) {\n    this.averageCenter = averageCenter;\n  };\n  _proto.getIgnoreHidden = function getIgnoreHidden() {\n    return this.ignoreHidden;\n  };\n  _proto.setIgnoreHidden = function setIgnoreHidden(ignoreHidden) {\n    this.ignoreHidden = ignoreHidden;\n  };\n  _proto.getEnableRetinaIcons = function getEnableRetinaIcons() {\n    return this.enableRetinaIcons;\n  };\n  _proto.setEnableRetinaIcons = function setEnableRetinaIcons(enableRetinaIcons) {\n    this.enableRetinaIcons = enableRetinaIcons;\n  };\n  _proto.getImageExtension = function getImageExtension() {\n    return this.imageExtension;\n  };\n  _proto.setImageExtension = function setImageExtension(imageExtension) {\n    this.imageExtension = imageExtension;\n  };\n  _proto.getImagePath = function getImagePath() {\n    return this.imagePath;\n  };\n  _proto.setImagePath = function setImagePath(imagePath) {\n    this.imagePath = imagePath;\n  };\n  _proto.getImageSizes = function getImageSizes() {\n    return this.imageSizes;\n  };\n  _proto.setImageSizes = function setImageSizes(imageSizes) {\n    this.imageSizes = imageSizes;\n  };\n  _proto.getCalculator = function getCalculator() {\n    return this.calculator;\n  };\n  _proto.setCalculator = function setCalculator(calculator) {\n    this.calculator = calculator;\n  };\n  _proto.getBatchSizeIE = function getBatchSizeIE() {\n    return this.batchSizeIE;\n  };\n  _proto.setBatchSizeIE = function setBatchSizeIE(batchSizeIE) {\n    this.batchSizeIE = batchSizeIE;\n  };\n  _proto.getClusterClass = function getClusterClass() {\n    return this.clusterClass;\n  };\n  _proto.setClusterClass = function setClusterClass(clusterClass) {\n    this.clusterClass = clusterClass;\n  };\n  _proto.getMarkers = function getMarkers() {\n    return this.markers;\n  };\n  _proto.getTotalMarkers = function getTotalMarkers() {\n    return this.markers.length;\n  };\n  _proto.getClusters = function getClusters() {\n    return this.clusters;\n  };\n  _proto.getTotalClusters = function getTotalClusters() {\n    return this.clusters.length;\n  };\n  _proto.addMarker = function addMarker(marker, optNoDraw) {\n    this.pushMarkerTo(marker);\n    if (!optNoDraw) {\n      this.redraw();\n    }\n  };\n  _proto.addMarkers = function addMarkers(markers, optNoDraw) {\n    for (var key in markers) {\n      if (markers.hasOwnProperty(key)) {\n        this.pushMarkerTo(markers[key]);\n      }\n    }\n    if (!optNoDraw) {\n      this.redraw();\n    }\n  };\n  _proto.pushMarkerTo = function pushMarkerTo(marker) {\n    var _this2 = this;\n\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\n    if (marker.getDraggable()) {\n      // eslint-disable-next-line @getify/proper-arrows/name, @getify/proper-arrows/this\n      google.maps.event.addListener(marker, 'dragend', function () {\n        if (_this2.ready) {\n          marker.isAdded = false;\n          _this2.repaint();\n        }\n      });\n    }\n    marker.isAdded = false;\n    this.markers.push(marker);\n  };\n  _proto.removeMarker_ = function removeMarker_(marker) {\n    var index = -1;\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker);\n    } else {\n      for (var i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i;\n          break;\n        }\n      }\n    }\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false;\n    }\n    marker.setMap(null);\n    this.markers.splice(index, 1); // Remove the marker from the list of managed markers\n\n    return true;\n  };\n  _proto.removeMarker = function removeMarker(marker, optNoDraw) {\n    var removed = this.removeMarker_(marker);\n    if (!optNoDraw && removed) {\n      this.repaint();\n    }\n    return removed;\n  };\n  _proto.removeMarkers = function removeMarkers(markers, optNoDraw) {\n    var removed = false;\n    for (var i = 0; i < markers.length; i++) {\n      removed = removed || this.removeMarker_(markers[i]);\n    }\n    if (!optNoDraw && removed) {\n      this.repaint();\n    }\n    return removed;\n  };\n  _proto.clearMarkers = function clearMarkers() {\n    this.resetViewport(true);\n    this.markers = [];\n  };\n  _proto.repaint = function repaint() {\n    var oldClusters = this.clusters.slice();\n    this.clusters = [];\n    this.resetViewport(false);\n    this.redraw(); // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n\n    setTimeout(function timeout() {\n      for (var i = 0; i < oldClusters.length; i++) {\n        oldClusters[i].remove();\n      }\n    }, 0);\n  };\n  _proto.getExtendedBounds = function getExtendedBounds(bounds) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    var projection = this.getProjection(); // Convert the points to pixels and the extend out by the grid size.\n\n    var trPix = projection.fromLatLngToDivPixel(\n    // Turn the bounds into latlng.\n    new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng()));\n    trPix.x += this.gridSize;\n    trPix.y -= this.gridSize;\n    var blPix = projection.fromLatLngToDivPixel(\n    // Turn the bounds into latlng.\n    new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng()));\n    blPix.x -= this.gridSize;\n    blPix.y += this.gridSize; // Extend the bounds to contain the new bounds.\n\n    bounds.extend(\n    // Convert the pixel points back to LatLng nw\n    projection.fromDivPixelToLatLng(trPix));\n    bounds.extend(\n    // Convert the pixel points back to LatLng sw\n    projection.fromDivPixelToLatLng(blPix));\n    return bounds;\n  };\n  _proto.redraw = function redraw() {\n    // Redraws all the clusters.\n    this.createClusters(0);\n  };\n  _proto.resetViewport = function resetViewport(optHide) {\n    // Remove all the clusters\n    for (var i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove();\n    }\n    this.clusters = []; // Reset the markers to not be added and to be removed from the map.\n\n    for (var _i3 = 0; _i3 < this.markers.length; _i3++) {\n      var marker = this.markers[_i3];\n      marker.isAdded = false;\n      if (optHide) {\n        marker.setMap(null);\n      }\n    }\n  };\n  _proto.distanceBetweenPoints = function distanceBetweenPoints(p1, p2) {\n    var R = 6371; // Radius of the Earth in km\n\n    var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n    var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\n  };\n  _proto.isMarkerInBounds = function isMarkerInBounds(marker, bounds) {\n    var position = marker.getPosition();\n    if (position) {\n      return bounds.contains(position);\n    }\n    return false;\n  };\n  _proto.addToClosestCluster = function addToClosestCluster(marker) {\n    var cluster;\n    var distance = 40000; // Some large number\n\n    var clusterToAddTo = null;\n    for (var i = 0; i < this.clusters.length; i++) {\n      cluster = this.clusters[i];\n      var center = cluster.getCenter();\n      var position = marker.getPosition();\n      if (center && position) {\n        var d = this.distanceBetweenPoints(center, position);\n        if (d < distance) {\n          distance = d;\n          clusterToAddTo = cluster;\n        }\n      }\n    }\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker);\n    } else {\n      cluster = new Cluster(this);\n      cluster.addMarker(marker);\n      this.clusters.push(cluster);\n    }\n  };\n  _proto.createClusters = function createClusters(iFirst) {\n    var _this3 = this;\n    if (!this.ready) {\n      return;\n    } // Cancel previous batch processing if we're working on the first batch:\n\n    if (iFirst === 0) {\n      /**\r\n       * This event is fired when the <code>Clusterer</code> begins\r\n       *  clustering markers.\r\n       * @name Clusterer#clusteringbegin\r\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\r\n       * @event\r\n       */\n      google.maps.event.trigger(this, 'clusteringbegin', this);\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic);\n        delete this.timerRefStatic;\n      }\n    } // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n\n    var mapBounds =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().getZoom() > 3 ? new google.maps.LatLngBounds(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().getBounds().getSouthWest(),\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().getBounds().getNorthEast()) : new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));\n    var bounds = this.getExtendedBounds(mapBounds);\n    var iLast = Math.min(iFirst + this.batchSize, this.markers.length);\n    for (var i = iFirst; i < iLast; i++) {\n      var marker = this.markers[i];\n      if (!marker.isAdded && this.isMarkerInBounds(marker, bounds)) {\n        if (!this.ignoreHidden || this.ignoreHidden && marker.getVisible()) {\n          this.addToClosestCluster(marker);\n        }\n      }\n    }\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout(\n      // eslint-disable-next-line @getify/proper-arrows/this, @getify/proper-arrows/name\n      function () {\n        _this3.createClusters(iLast);\n      }, 0);\n    } else {\n      this.timerRefStatic = null;\n      /**\r\n       * This event is fired when the <code>Clusterer</code> stops\r\n       *  clustering markers.\r\n       * @name Clusterer#clusteringend\r\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\r\n       * @event\r\n       */\n\n      google.maps.event.trigger(this, 'clusteringend', this);\n      for (var _i4 = 0; _i4 < this.clusters.length; _i4++) {\n        this.clusters[_i4].updateIcon();\n      }\n    }\n  };\n  _proto.extend = function extend(obj1, obj2) {\n    return function applyExtend(object) {\n      // eslint-disable-next-line guard-for-in\n      for (var property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.prototype[property] = object.prototype[property];\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n      return this;\n    }.apply(obj1, [obj2]);\n  };\n  return Clusterer;\n}();\nexport { Cluster, ClusterIcon, Clusterer };","map":{"version":3,"names":["ClusterIcon","cluster","styles","getClusterer","extend","google","maps","OverlayView","className","getClusterClass","center","undefined","div","sums","visible","boundsChangedListener","url","height","width","anchorText","anchorIcon","textColor","textSize","textDecoration","fontWeight","fontStyle","fontFamily","backgroundPosition","setMap","getMap","_proto","prototype","onAdd","cMouseDownInCluster","cDraggingMapByCluster","document","createElement","show","getPanes","overlayMouseTarget","appendChild","event","addListener","boundsChanged","addDomListener","onMouseDown","markerClusterer","_this","trigger","getZoomOnClick","maxZoom","getMaxZoom","bounds","getBounds","fitBounds","setTimeout","timeout","getZoom","setZoom","cancelBubble","stopPropagation","onRemove","parentNode","hide","removeListener","clearInstanceListeners","removeChild","draw","_this$getPosFromLatLn","getPosFromLatLng","x","y","style","top","left","display","img","divTitle","bp","split","spriteH","parseInt","replace","spriteV","pos","title","getTitle","cssText","createCss","enableRetinaIcons","innerHTML","text","useStyle","Math","min","length","max","index","setCenter","push","join","latlng","getProjection","fromLatLngToDivPixel","Cluster","map","gridSize","getGridSize","minClusterSize","getMinimumClusterSize","averageCenter","getAverageCenter","markers","clusterIcon","getStyles","getSize","getMarkers","getCenter","LatLngBounds","i","position","getPosition","remove","addMarker","marker","isMarkerAlreadyAdded","calculateBounds","_position","LatLng","lat","lng","isAdded","mCount","isMarkerInClusterBounds","contains","getExtendedBounds","updateIcon","getCalculator","includes","CALCULATOR","numStyles","count","toString","dv","BATCH_SIZE","BATCH_SIZE_IE","IMAGE_PATH","IMAGE_EXTENSION","IMAGE_SIZES","CLUSTERER_CLASS","Clusterer","optMarkers","optOptions","clusters","listeners","activeMap","ready","minimumClusterSize","zoomOnClick","ignoreHidden","imagePath","imageExtension","imageSizes","calculator","batchSize","batchSizeIE","clusterClass","navigator","userAgent","toLowerCase","indexOf","timerRefStatic","setupStyles","addMarkers","repaint","resetViewport","get","redraw","_i","_i2","fitMapToMarkers","setGridSize","setMinimumClusterSize","setMaxZoom","setStyles","setTitle","setZoomOnClick","setAverageCenter","getIgnoreHidden","setIgnoreHidden","getEnableRetinaIcons","setEnableRetinaIcons","getImageExtension","setImageExtension","getImagePath","setImagePath","getImageSizes","setImageSizes","setCalculator","getBatchSizeIE","setBatchSizeIE","setClusterClass","getTotalMarkers","getClusters","getTotalClusters","optNoDraw","pushMarkerTo","key","hasOwnProperty","getDraggable","_this2","removeMarker_","splice","removeMarker","removed","removeMarkers","clearMarkers","oldClusters","slice","projection","trPix","getNorthEast","blPix","getSouthWest","fromDivPixelToLatLng","createClusters","optHide","_i3","distanceBetweenPoints","p1","p2","R","dLat","PI","dLon","a","sin","cos","atan2","sqrt","isMarkerInBounds","addToClosestCluster","distance","clusterToAddTo","d","iFirst","window","clearTimeout","mapBounds","iLast","getVisible","_this3","_i4","obj1","obj2","applyExtend","object","property","apply"],"sources":["../src/ClusterIcon.tsx","../src/Cluster.tsx","../src/Clusterer.tsx"],"sourcesContent":["/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\n\nimport { ClusterIconStyle, ClusterIconInfo } from './types'\n\nexport class ClusterIcon {\n  cluster: Cluster\n  className: string\n  styles: ClusterIconStyle[]\n  center: google.maps.LatLng | undefined\n  div: HTMLDivElement | null\n  sums: ClusterIconInfo | null\n  visible: boolean\n  url: string\n  height: number\n  width: number\n  anchorText: number[]\n  anchorIcon: number[]\n  textColor: string\n  textSize: number\n  textDecoration: string\n  fontWeight: string\n  fontStyle: string\n  fontFamily: string\n  backgroundPosition: string\n\n  boundsChangedListener: google.maps.MapsEventListener | null\n\n  constructor(cluster: Cluster, styles: ClusterIconStyle[]) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView)\n    this.cluster = cluster\n    this.className = this.cluster.getClusterer().getClusterClass()\n    this.styles = styles\n    this.center = undefined\n    this.div = null\n    this.sums = null\n    this.visible = false\n    this.boundsChangedListener = null\n    this.url = ''\n    this.height = 0\n    this.width = 0\n    this.anchorText = [0, 0]\n    this.anchorIcon = [0, 0]\n    this.textColor = 'black'\n    this.textSize = 11\n    this.textDecoration = 'none'\n    this.fontWeight = 'bold'\n    this.fontStyle = 'normal'\n    this.fontFamily = 'Arial,sans-serif'\n    this.backgroundPosition = '0 0'\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(cluster.getMap()) // Note: this causes onAdd to be called\n  }\n\n  onAdd() {\n    let cMouseDownInCluster: boolean\n    let cDraggingMapByCluster: boolean\n\n    this.div = document.createElement('div')\n    this.div.className = this.className\n    if (this.visible) {\n      this.show()\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getPanes().overlayMouseTarget.appendChild(this.div)\n\n    // Fix for Issue 157\n    this.boundsChangedListener = google.maps.event.addListener(\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.getMap(),\n      'boundschanged',\n      function boundsChanged() {\n        cDraggingMapByCluster = cMouseDownInCluster\n      }\n    )\n\n    google.maps.event.addDomListener(this.div, 'mousedown', function onMouseDown() {\n      cMouseDownInCluster = true\n      cDraggingMapByCluster = false\n    })\n\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    google.maps.event.addDomListener(\n      this.div,\n      'click',\n      // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      (event: Event) => {\n        cMouseDownInCluster = false\n\n        if (!cDraggingMapByCluster) {\n          const markerClusterer = this.cluster.getClusterer()\n\n          /**\n           * This event is fired when a cluster marker is clicked.\n           * @name MarkerClusterer#click\n           * @param {Cluster} c The cluster that was clicked.\n           * @event\n           */\n          google.maps.event.trigger(markerClusterer, 'click', this.cluster)\n          google.maps.event.trigger(markerClusterer, 'clusterclick', this.cluster) // deprecated name\n\n          // The default click handler follows. Disable it by setting\n          // the zoomOnClick property to false.\n          if (markerClusterer.getZoomOnClick()) {\n            // Zoom into the cluster.\n            const maxZoom = markerClusterer.getMaxZoom()\n\n            const bounds = this.cluster.getBounds()\n\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            markerClusterer.getMap().fitBounds(bounds)\n\n            // There is a fix for Issue 170 here:\n            setTimeout(function timeout() {\n              // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              markerClusterer.getMap().fitBounds(bounds)\n\n              // Don't zoom beyond the max zoom level\n              // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              if (maxZoom !== null && markerClusterer.getMap().getZoom() > maxZoom) {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                markerClusterer.getMap().setZoom(maxZoom + 1)\n              }\n            }, 100)\n          }\n\n          // Prevent event propagation to the map:\n          event.cancelBubble = true\n\n          if (event.stopPropagation) {\n            event.stopPropagation()\n          }\n        }\n      }\n    )\n\n    google.maps.event.addDomListener(\n      this.div,\n      'mouseover',\n      // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      () => {\n        /**\n         * This event is fired when the mouse moves over a cluster marker.\n         * @name MarkerClusterer#mouseover\n         * @param {Cluster} c The cluster that the mouse moved over.\n         * @event\n         */\n        google.maps.event.trigger(this.cluster.getClusterer(), 'mouseover', this.cluster)\n      }\n    )\n\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    google.maps.event.addDomListener(\n      this.div,\n      'mouseout',\n      // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      () => {\n        /**\n         * This event is fired when the mouse moves out of a cluster marker.\n         * @name MarkerClusterer#mouseout\n         * @param {Cluster} c The cluster that the mouse moved out of.\n         * @event\n         */\n        google.maps.event.trigger(this.cluster.getClusterer(), 'mouseout', this.cluster)\n      }\n    )\n  }\n\n  onRemove() {\n    if (this.div && this.div.parentNode) {\n      this.hide()\n\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener)\n      }\n\n      google.maps.event.clearInstanceListeners(this.div)\n\n      this.div.parentNode.removeChild(this.div)\n\n      this.div = null\n    }\n  }\n\n  draw() {\n    if (this.visible && this.div !== null && this.center) {\n      const { x, y } = this.getPosFromLatLng(this.center)\n\n      this.div.style.top = y + 'px'\n      this.div.style.left = x + 'px'\n    }\n  }\n\n  hide() {\n    if (this.div) {\n      this.div.style.display = 'none'\n    }\n\n    this.visible = false\n  }\n\n  show() {\n    if (this.div && this.center) {\n      let img = '',\n        divTitle = ''\n\n      // NOTE: values must be specified in px units\n      const bp = this.backgroundPosition.split(' ')\n\n      const spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10)\n\n      const spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10)\n\n      const pos = this.getPosFromLatLng(this.center)\n\n      if (this.sums === null || typeof this.sums.title === 'undefined' || this.sums.title === '') {\n        divTitle = this.cluster.getClusterer().getTitle()\n      } else {\n        divTitle = this.sums.title\n      }\n\n      this.div.style.cssText = this.createCss(pos)\n\n      img =\n        \"<img alt='\" +\n        divTitle +\n        \"' src='\" +\n        this.url +\n        \"' style='position: absolute; top: \" +\n        spriteV +\n        'px; left: ' +\n        spriteH +\n        'px; '\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      //@ts-ignore\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img +=\n          'clip: rect(' +\n          -1 * spriteV +\n          'px, ' +\n          (-1 * spriteH + this.width) +\n          'px, ' +\n          (-1 * spriteV + this.height) +\n          'px, ' +\n          -1 * spriteH +\n          'px);'\n      }\n\n      img += \"'>\"\n\n      this.div.innerHTML =\n        img +\n        \"<div style='\" +\n        'position: absolute;' +\n        'top: ' +\n        this.anchorText[0] +\n        'px;' +\n        'left: ' +\n        this.anchorText[1] +\n        'px;' +\n        'color: ' +\n        this.textColor +\n        ';' +\n        'font-size: ' +\n        this.textSize +\n        'px;' +\n        'font-family: ' +\n        this.fontFamily +\n        ';' +\n        'font-weight: ' +\n        this.fontWeight +\n        ';' +\n        'font-style: ' +\n        this.fontStyle +\n        ';' +\n        'text-decoration: ' +\n        this.textDecoration +\n        ';' +\n        'text-align: center;' +\n        'width: ' +\n        this.width +\n        'px;' +\n        'line-height:' +\n        this.height +\n        'px;' +\n        \"'>\" +\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.sums.text +\n        '</div>'\n\n      this.div.title = divTitle\n\n      this.div.style.display = ''\n    }\n\n    this.visible = true\n  }\n\n  useStyle(sums: ClusterIconInfo) {\n    this.sums = sums\n\n    const style = this.styles[Math.min(this.styles.length - 1, Math.max(0, sums.index - 1))]\n\n    this.url = style.url\n    this.height = style.height\n    this.width = style.width\n    this.anchorText = style.anchorText || [0, 0]\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2]\n\n    this.textColor = style.textColor || 'black'\n\n    this.textSize = style.textSize || 11\n\n    this.textDecoration = style.textDecoration || 'none'\n\n    this.fontWeight = style.fontWeight || 'bold'\n\n    this.fontStyle = style.fontStyle || 'normal'\n\n    this.fontFamily = style.fontFamily || 'Arial,sans-serif'\n\n    this.backgroundPosition = style.backgroundPosition || '0 0'\n  }\n\n  setCenter(center: google.maps.LatLng) {\n    this.center = center\n  }\n\n  createCss(pos: google.maps.Point): string {\n    const style = []\n\n    style.push('cursor: pointer;')\n\n    style.push('position: absolute; top: ' + pos.y + 'px; left: ' + pos.x + 'px;')\n\n    style.push('width: ' + this.width + 'px; height: ' + this.height + 'px;')\n\n    return style.join('')\n  }\n\n  getPosFromLatLng(latlng: google.maps.LatLng): google.maps.Point {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const pos = this.getProjection().fromLatLngToDivPixel(latlng)\n\n    pos.x -= this.anchorIcon[1]\n\n    pos.y -= this.anchorIcon[0]\n\n    // pos.x = pos.x\n\n    // pos.y = pos.y\n\n    return pos\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Clusterer } from './Clusterer'\n\nimport { ClusterIcon } from './ClusterIcon'\n\nimport { MarkerExtended } from './types'\n\nexport class Cluster {\n  markerClusterer: Clusterer\n  map: google.maps.Map | google.maps.StreetViewPanorama\n  gridSize: number\n  minClusterSize: number\n  averageCenter: boolean\n  markers: MarkerExtended[]\n  center: google.maps.LatLng | undefined\n  bounds: google.maps.LatLngBounds | null\n  clusterIcon: ClusterIcon\n\n  constructor(markerClusterer: Clusterer) {\n    this.markerClusterer = markerClusterer\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.map = this.markerClusterer.getMap()\n\n    this.gridSize = this.markerClusterer.getGridSize()\n\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize()\n\n    this.averageCenter = this.markerClusterer.getAverageCenter()\n\n    this.markers = []\n\n    this.center = undefined\n\n    this.bounds = null\n\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles())\n  }\n\n  getSize(): number {\n    return this.markers.length\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getCenter(): google.maps.LatLng | undefined {\n    return this.center\n  }\n\n  getMap(): google.maps.Map | google.maps.StreetViewPanorama {\n    return this.map\n  }\n\n  getClusterer(): Clusterer {\n    return this.markerClusterer\n  }\n\n  getBounds(): google.maps.LatLngBounds {\n    const bounds = new google.maps.LatLngBounds(this.center, this.center)\n\n    const markers = this.getMarkers()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    return bounds\n  }\n\n  remove() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.clusterIcon.setMap(null)\n\n    this.markers = []\n\n    delete this.markers\n  }\n\n  addMarker(marker: MarkerExtended): boolean {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false\n    }\n\n    if (!this.center) {\n      const position = marker.getPosition()\n\n      if (position) {\n        this.center = position\n\n        this.calculateBounds()\n      }\n    } else {\n      if (this.averageCenter) {\n        const position = marker.getPosition()\n\n        if (position) {\n          const length = this.markers.length + 1\n\n          this.center = new google.maps.LatLng(\n            (this.center.lat() * (length - 1) + position.lat()) / length,\n            (this.center.lng() * (length - 1) + position.lng()) / length\n          )\n\n          this.calculateBounds()\n        }\n      }\n    }\n\n    marker.isAdded = true\n\n    this.markers.push(marker)\n\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (let i = 0; i < mCount; i++) {\n        this.markers[i].setMap(null)\n      }\n    } else {\n      marker.setMap(null)\n    }\n\n    return true\n  }\n\n  isMarkerInClusterBounds(marker: MarkerExtended): boolean {\n    if (this.bounds !== null) {\n      const position = marker.getPosition()\n\n      if (position) {\n        return this.bounds.contains(position)\n      }\n    }\n\n    return false\n  }\n\n  calculateBounds() {\n    this.bounds = this.markerClusterer.getExtendedBounds(\n      new google.maps.LatLngBounds(this.center, this.center)\n    )\n  }\n\n  updateIcon() {\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center)\n    }\n\n    this.clusterIcon.useStyle(\n      this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length)\n    )\n\n    this.clusterIcon.show()\n  }\n\n  isMarkerAlreadyAdded(marker: MarkerExtended): boolean {\n    if (this.markers.includes) {\n      return this.markers.includes(marker)\n    } else {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          return true\n        }\n      }\n    }\n\n    return false\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\n\nimport {\n  MarkerExtended,\n  ClustererOptions,\n  ClusterIconStyle,\n  TCalculator,\n  ClusterIconInfo,\n} from './types'\n\nconst CALCULATOR = function CALCULATOR(\n  markers: MarkerExtended[],\n  numStyles: number\n): ClusterIconInfo {\n  let index = 0\n\n  const title = ''\n\n  const count = markers.length.toString()\n\n  let dv: string | number = count\n\n  while (dv !== 0) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    dv = parseInt(dv, 10) / 10\n\n    index++\n  }\n\n  index = Math.min(index, numStyles)\n\n  return {\n    text: count,\n    index: index,\n    title: title,\n  }\n}\n\nconst BATCH_SIZE = 2000\n\nconst BATCH_SIZE_IE = 500\n\nconst IMAGE_PATH =\n  'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'\n\nconst IMAGE_EXTENSION = 'png'\n\nconst IMAGE_SIZES = [53, 56, 66, 78, 90]\n\nconst CLUSTERER_CLASS = 'cluster'\n\nexport class Clusterer {\n  markers: MarkerExtended[]\n  clusters: Cluster[]\n  listeners: google.maps.MapsEventListener[]\n  activeMap: google.maps.Map | google.maps.StreetViewPanorama | null\n  ready: boolean\n  gridSize: number\n  minClusterSize: number\n  maxZoom: number | null\n  styles: ClusterIconStyle[]\n  title: string\n  zoomOnClick: boolean\n  averageCenter: boolean\n  ignoreHidden: boolean\n  enableRetinaIcons: boolean\n  imagePath: string\n  imageExtension: string\n  imageSizes: number[]\n  calculator: TCalculator\n  batchSize: number\n  batchSizeIE: number\n  clusterClass: string\n  timerRefStatic: number | null\n\n  constructor(\n    map: google.maps.Map,\n    optMarkers: MarkerExtended[] = [],\n    optOptions: ClustererOptions = {}\n  ) {\n    this.extend(Clusterer, google.maps.OverlayView)\n\n    this.markers = []\n    this.clusters = []\n    this.listeners = []\n    this.activeMap = null\n    this.ready = false\n    this.gridSize = optOptions.gridSize || 60\n    this.minClusterSize = optOptions.minimumClusterSize || 2\n    this.maxZoom = optOptions.maxZoom || null\n    this.styles = optOptions.styles || []\n\n    this.title = optOptions.title || ''\n\n    this.zoomOnClick = true\n\n    if (optOptions.zoomOnClick !== undefined) {\n      this.zoomOnClick = optOptions.zoomOnClick\n    }\n\n    this.averageCenter = false\n\n    if (optOptions.averageCenter !== undefined) {\n      this.averageCenter = optOptions.averageCenter\n    }\n\n    this.ignoreHidden = false\n\n    if (optOptions.ignoreHidden !== undefined) {\n      this.ignoreHidden = optOptions.ignoreHidden\n    }\n\n    this.enableRetinaIcons = false\n\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons\n    }\n    this.imagePath = optOptions.imagePath || IMAGE_PATH\n\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION\n\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES\n\n    this.calculator = optOptions.calculator || CALCULATOR\n\n    this.batchSize = optOptions.batchSize || BATCH_SIZE\n\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE\n\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS\n\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE\n    }\n\n    this.timerRefStatic = null\n\n    this.setupStyles()\n\n    this.addMarkers(optMarkers, true)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(map) // Note: this causes onAdd to be called\n  }\n\n  onAdd() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.activeMap = this.getMap()\n\n    this.ready = true\n\n    this.repaint()\n\n    // Add the map event listeners\n    this.listeners = [\n      google.maps.event.addListener(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.getMap(),\n        'zoom_changed',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          this.resetViewport(false)\n          // Workaround for this Google bug: when map is at level 0 and \"-\" of\n          // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n          // the map doesn't zoom out any further. In this situation, no \"idle\"\n          // event is triggered so the cluster markers that have been removed\n          // do not get redrawn. Same goes for a zoom in at maxZoom.\n          if (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap().getZoom() === (this.get('minZoom') || 0) ||\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap().getZoom() === this.get('maxZoom')\n          ) {\n            google.maps.event.trigger(this, 'idle')\n          }\n        }\n      ),\n      google.maps.event.addListener(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.getMap(),\n        'idle',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          this.redraw()\n        }\n      ),\n    ]\n  }\n\n  // eslint-disable-next-line @getify/proper-arrows/this\n  onRemove() {\n    // Put all the managed markers back on the map:\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].getMap() !== this.activeMap) {\n        this.markers[i].setMap(this.activeMap)\n      }\n    }\n\n    // Remove all clusters:\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Remove map event listeners:\n    for (let i = 0; i < this.listeners.length; i++) {\n      google.maps.event.removeListener(this.listeners[i])\n    }\n\n    this.listeners = []\n\n    this.activeMap = null\n\n    this.ready = false\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  draw() {}\n\n  setupStyles() {\n    if (this.styles.length > 0) {\n      return\n    }\n\n    for (let i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: this.imagePath + (i + 1) + '.' + this.imageExtension,\n        height: this.imageSizes[i],\n        width: this.imageSizes[i],\n      })\n    }\n  }\n\n  fitMapToMarkers() {\n    const markers = this.getMarkers()\n\n    const bounds = new google.maps.LatLngBounds()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().fitBounds(bounds)\n  }\n\n  getGridSize(): number {\n    return this.gridSize\n  }\n\n  setGridSize(gridSize: number) {\n    this.gridSize = gridSize\n  }\n\n  getMinimumClusterSize(): number {\n    return this.minClusterSize\n  }\n\n  setMinimumClusterSize(minimumClusterSize: number) {\n    this.minClusterSize = minimumClusterSize\n  }\n\n  getMaxZoom(): number | null {\n    return this.maxZoom\n  }\n\n  setMaxZoom(maxZoom: number) {\n    this.maxZoom = maxZoom\n  }\n\n  getStyles(): ClusterIconStyle[] {\n    return this.styles\n  }\n\n  setStyles(styles: ClusterIconStyle[]) {\n    this.styles = styles\n  }\n\n  getTitle(): string {\n    return this.title\n  }\n\n  setTitle(title: string) {\n    this.title = title\n  }\n\n  getZoomOnClick(): boolean {\n    return this.zoomOnClick\n  }\n\n  setZoomOnClick(zoomOnClick: boolean) {\n    this.zoomOnClick = zoomOnClick\n  }\n\n  getAverageCenter(): boolean {\n    return this.averageCenter\n  }\n\n  setAverageCenter(averageCenter: boolean) {\n    this.averageCenter = averageCenter\n  }\n\n  getIgnoreHidden(): boolean {\n    return this.ignoreHidden\n  }\n\n  setIgnoreHidden(ignoreHidden: boolean) {\n    this.ignoreHidden = ignoreHidden\n  }\n\n  getEnableRetinaIcons(): boolean {\n    return this.enableRetinaIcons\n  }\n\n  setEnableRetinaIcons(enableRetinaIcons: boolean) {\n    this.enableRetinaIcons = enableRetinaIcons\n  }\n\n  getImageExtension(): string {\n    return this.imageExtension\n  }\n\n  setImageExtension(imageExtension: string) {\n    this.imageExtension = imageExtension\n  }\n\n  getImagePath(): string {\n    return this.imagePath\n  }\n\n  setImagePath(imagePath: string) {\n    this.imagePath = imagePath\n  }\n\n  getImageSizes(): number[] {\n    return this.imageSizes\n  }\n\n  setImageSizes(imageSizes: number[]) {\n    this.imageSizes = imageSizes\n  }\n\n  getCalculator(): TCalculator {\n    return this.calculator\n  }\n\n  setCalculator(calculator: TCalculator) {\n    this.calculator = calculator\n  }\n\n  getBatchSizeIE(): number {\n    return this.batchSizeIE\n  }\n\n  setBatchSizeIE(batchSizeIE: number) {\n    this.batchSizeIE = batchSizeIE\n  }\n\n  getClusterClass(): string {\n    return this.clusterClass\n  }\n\n  setClusterClass(clusterClass: string) {\n    this.clusterClass = clusterClass\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getTotalMarkers(): number {\n    return this.markers.length\n  }\n\n  getClusters(): Cluster[] {\n    return this.clusters\n  }\n\n  getTotalClusters(): number {\n    return this.clusters.length\n  }\n\n  addMarker(marker: MarkerExtended, optNoDraw: boolean) {\n    this.pushMarkerTo(marker)\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  addMarkers(markers: MarkerExtended[], optNoDraw: boolean) {\n    for (const key in markers) {\n      if (markers.hasOwnProperty(key)) {\n        this.pushMarkerTo(markers[key])\n      }\n    }\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  pushMarkerTo(marker: MarkerExtended) {\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\n    if (marker.getDraggable()) {\n      // eslint-disable-next-line @getify/proper-arrows/name, @getify/proper-arrows/this\n      google.maps.event.addListener(marker, 'dragend', () => {\n        if (this.ready) {\n          marker.isAdded = false\n\n          this.repaint()\n        }\n      })\n    }\n\n    marker.isAdded = false\n\n    this.markers.push(marker)\n  }\n\n  removeMarker_(marker: MarkerExtended): boolean {\n    let index = -1\n\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker)\n    } else {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i\n\n          break\n        }\n      }\n    }\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false\n    }\n\n    marker.setMap(null)\n\n    this.markers.splice(index, 1) // Remove the marker from the list of managed markers\n\n    return true\n  }\n\n  removeMarker(marker: MarkerExtended, optNoDraw: boolean): boolean {\n    const removed = this.removeMarker_(marker)\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  removeMarkers(markers: MarkerExtended[], optNoDraw: boolean): boolean {\n    let removed = false\n\n    for (let i = 0; i < markers.length; i++) {\n      removed = removed || this.removeMarker_(markers[i])\n    }\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  clearMarkers() {\n    this.resetViewport(true)\n\n    this.markers = []\n  }\n\n  repaint() {\n    const oldClusters = this.clusters.slice()\n\n    this.clusters = []\n\n    this.resetViewport(false)\n\n    this.redraw()\n\n    // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n    setTimeout(function timeout() {\n      for (let i = 0; i < oldClusters.length; i++) {\n        oldClusters[i].remove()\n      }\n    }, 0)\n  }\n\n  getExtendedBounds(bounds: google.maps.LatLngBounds): google.maps.LatLngBounds {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const projection = this.getProjection()\n    // Convert the points to pixels and the extend out by the grid size.\n    const trPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng())\n    )\n\n    trPix.x += this.gridSize\n    trPix.y -= this.gridSize\n\n    const blPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng())\n    )\n\n    blPix.x -= this.gridSize\n    blPix.y += this.gridSize\n\n    // Extend the bounds to contain the new bounds.\n    bounds.extend(\n      // Convert the pixel points back to LatLng nw\n      projection.fromDivPixelToLatLng(trPix)\n    )\n\n    bounds.extend(\n      // Convert the pixel points back to LatLng sw\n      projection.fromDivPixelToLatLng(blPix)\n    )\n\n    return bounds\n  }\n\n  redraw() {\n    // Redraws all the clusters.\n    this.createClusters(0)\n  }\n\n  resetViewport(optHide: boolean) {\n    // Remove all the clusters\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Reset the markers to not be added and to be removed from the map.\n    for (let i = 0; i < this.markers.length; i++) {\n      const marker = this.markers[i]\n\n      marker.isAdded = false\n\n      if (optHide) {\n        marker.setMap(null)\n      }\n    }\n  }\n\n  distanceBetweenPoints(p1: google.maps.LatLng, p2: google.maps.LatLng): number {\n    const R = 6371 // Radius of the Earth in km\n\n    const dLat = ((p2.lat() - p1.lat()) * Math.PI) / 180\n    const dLon = ((p2.lng() - p1.lng()) * Math.PI) / 180\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos((p1.lat() * Math.PI) / 180) *\n        Math.cos((p2.lat() * Math.PI) / 180) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2)\n\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)))\n  }\n\n  isMarkerInBounds(marker: MarkerExtended, bounds: google.maps.LatLngBounds): boolean {\n    const position = marker.getPosition()\n\n    if (position) {\n      return bounds.contains(position)\n    }\n\n    return false\n  }\n\n  addToClosestCluster(marker: MarkerExtended) {\n    let cluster\n\n    let distance = 40000 // Some large number\n\n    let clusterToAddTo = null\n\n    for (let i = 0; i < this.clusters.length; i++) {\n      cluster = this.clusters[i]\n\n      const center = cluster.getCenter()\n\n      const position = marker.getPosition()\n\n      if (center && position) {\n        const d = this.distanceBetweenPoints(center, position)\n\n        if (d < distance) {\n          distance = d\n\n          clusterToAddTo = cluster\n        }\n      }\n    }\n\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker)\n    } else {\n      cluster = new Cluster(this)\n\n      cluster.addMarker(marker)\n\n      this.clusters.push(cluster)\n    }\n  }\n\n  createClusters(iFirst: number) {\n    if (!this.ready) {\n      return\n    }\n\n    // Cancel previous batch processing if we're working on the first batch:\n    if (iFirst === 0) {\n      /**\n       * This event is fired when the <code>Clusterer</code> begins\n       *  clustering markers.\n       * @name Clusterer#clusteringbegin\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringbegin', this)\n\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic)\n\n        delete this.timerRefStatic\n      }\n    }\n\n    // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n    const mapBounds =\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.getMap().getZoom() > 3\n        ? new google.maps.LatLngBounds(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap()\n              .getBounds()\n              .getSouthWest(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap()\n              .getBounds()\n              .getNorthEast()\n          )\n        : new google.maps.LatLngBounds(\n            new google.maps.LatLng(85.02070771743472, -178.48388434375),\n            new google.maps.LatLng(-85.08136444384544, 178.00048865625)\n          )\n\n    const bounds = this.getExtendedBounds(mapBounds)\n\n    const iLast = Math.min(iFirst + this.batchSize, this.markers.length)\n\n    for (let i = iFirst; i < iLast; i++) {\n      const marker = this.markers[i]\n\n      if (!marker.isAdded && this.isMarkerInBounds(marker, bounds)) {\n        if (!this.ignoreHidden || (this.ignoreHidden && marker.getVisible())) {\n          this.addToClosestCluster(marker)\n        }\n      }\n    }\n\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout(\n        // eslint-disable-next-line @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          this.createClusters(iLast)\n        },\n        0\n      )\n    } else {\n      this.timerRefStatic = null\n\n      /**\n       * This event is fired when the <code>Clusterer</code> stops\n       *  clustering markers.\n       * @name Clusterer#clusteringend\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringend', this)\n\n      for (let i = 0; i < this.clusters.length; i++) {\n        this.clusters[i].updateIcon()\n      }\n    }\n  }\n\n  extend(obj1: any, obj2: any): any {\n    return function applyExtend(object: any) {\n      // eslint-disable-next-line guard-for-in\n      for (const property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.prototype[property] = object.prototype[property]\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      return this\n    }.apply(obj1, [obj2])\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}